// JS. Lesson 2 Task 7. 
// Сравнить null и 0. Объяснить результат.
// Сравнения происходят в соответствии со стандартом "Стандарт ECMA-262. 3-я редакция"

console.log(null > 0) // false
console.log(null < 0) // false
console.log(null == 0) // false
console.log(null === 0) // false
console.log(null != 0)  // true
console.log(null !== 0) // true
console.log(null >= 0)  // true
console.log(null <= 0)  // true

//  Null — примитивное значение, которое представляет собой намеренное отсутствие какого-либо значения объекта.

// Касательно выражений  типа: null >= 0 и т.п. в соответсвии со стандартом, алгоритм выглядит следующим образом:

// 11.8.4 Оператор больше-или-равно ( >= )

//    Значение нетерминала ВыражениеОтношения : ВыражениеОтношения >= ВыражениеСдвига вычисляется по следующей схеме:

//    1. Вычислить значение ВыраженияОтношения.

//    2. Вызвать ПолучитьЗначение(Результата(1)).

//    3. Вычислить значение ВыраженияСдвига.

//    4. Вызвать ПолучитьЗначение(Результата(3)).

//   5. Произвести сравнение Результат(2) < Результат(4) (см. раздел 11.8.5).

//    6. Если Результат(5) равен true или undefined - вернуть false. Иначе вернуть true.

// Т.о. получается "нечто": Если null < 0 принимает значение false, то null >= 0 принимает значение true
// В дальнейшем при кодировании на JS, надо учитывать данные "нюансы" булевой алгебры языка, чтобы не допустить путаницы.

